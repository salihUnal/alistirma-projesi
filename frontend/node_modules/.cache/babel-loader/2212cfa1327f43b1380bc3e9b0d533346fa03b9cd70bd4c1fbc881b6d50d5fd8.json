{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Project\\\\alistirma-projesi\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.tsx\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  requiredRole,\n  redirectTo = \"/\"\n}) {\n  _s();\n  const {\n    isLoggedIn,\n    userRole\n  } = useAuth();\n  const location = useLocation();\n  if (!isLoggedIn) {\n    localStorage.setItem(\"redirectAfterLogin\", location.pathname);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && userRole !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(ProtectedRoute, \"GxM/ELL5B+HHvvgPJX7+qeamvAg=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","requiredRole","redirectTo","_s","isLoggedIn","userRole","location","localStorage","setItem","pathname","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/My React Project/alistirma-projesi/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["// src/components/ProtectedRoute.tsx\r\nimport React from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: string;\r\n  redirectTo?: string;\r\n}\r\n\r\nfunction ProtectedRoute({\r\n  children,\r\n  requiredRole,\r\n  redirectTo = \"/\",\r\n}: ProtectedRouteProps) {\r\n  const { isLoggedIn, userRole } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!isLoggedIn) {\r\n    localStorage.setItem(\"redirectAfterLogin\", location.pathname);\r\n    return <Navigate to={redirectTo} replace />;\r\n  }\r\n\r\n  if (requiredRole && userRole !== requiredRole) {\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQlD,SAASC,cAAcA,CAAC;EACtBC,QAAQ;EACRC,YAAY;EACZC,UAAU,GAAG;AACM,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC1C,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACW,UAAU,EAAE;IACfG,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEF,QAAQ,CAACG,QAAQ,CAAC;IAC7D,oBAAOb,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAER,UAAW;MAACS,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,IAAId,YAAY,IAAII,QAAQ,KAAKJ,YAAY,EAAE;IAC7C,oBAAOL,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;EAEA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB;AAACG,EAAA,CAlBQJ,cAAc;EAAA,QAKYL,OAAO,EACvBD,WAAW;AAAA;AAAAuB,EAAA,GANrBjB,cAAc;AAoBvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}